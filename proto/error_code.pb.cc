// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error_code.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "error_code.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gnss_driver {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* StatusPb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StatusPb_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_error_5fcode_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_error_5fcode_2eproto() {
  protobuf_AddDesc_error_5fcode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "error_code.proto");
  GOOGLE_CHECK(file != NULL);
  StatusPb_descriptor_ = file->message_type(0);
  static const int StatusPb_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusPb, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusPb, msg_),
  };
  StatusPb_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StatusPb_descriptor_,
      StatusPb::internal_default_instance(),
      StatusPb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusPb, _has_bits_),
      -1,
      -1,
      sizeof(StatusPb),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusPb, _internal_metadata_));
  ErrorCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_error_5fcode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StatusPb_descriptor_, StatusPb::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_error_5fcode_2eproto() {
  StatusPb_default_instance_.Shutdown();
  delete StatusPb_reflection_;
}

void protobuf_InitDefaults_error_5fcode_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  StatusPb_default_instance_.DefaultConstruct();
  StatusPb_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_error_5fcode_2eproto_once_);
void protobuf_InitDefaults_error_5fcode_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_error_5fcode_2eproto_once_,
                 &protobuf_InitDefaults_error_5fcode_2eproto_impl);
}
void protobuf_AddDesc_error_5fcode_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_error_5fcode_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020error_code.proto\022\016gnss_driver.pb\"J\n\010St"
    "atusPb\0221\n\nerror_code\030\001 \001(\0162\031.gnss_driver"
    ".pb.ErrorCode:\002OK\022\013\n\003msg\030\002 \001(\t*\234\003\n\tError"
    "Code\022\006\n\002OK\020\000\022\022\n\rCONTROL_ERROR\020\350\007\022\027\n\022CONT"
    "ROL_INIT_ERROR\020\351\007\022\032\n\025CONTROL_COMPUTE_ERR"
    "OR\020\352\007\022\021\n\014CANBUS_ERROR\020\320\017\022\032\n\025CAN_CLIENT_E"
    "RROR_BASE\020\264\020\022(\n#CAN_CLIENT_ERROR_OPEN_DE"
    "VICE_FAILED\020\265\020\022\037\n\032CAN_CLIENT_ERROR_FRAME"
    "_NUM\020\266\020\022!\n\034CAN_CLIENT_ERROR_SEND_FAILED\020"
    "\267\020\022!\n\034CAN_CLIENT_ERROR_RECV_FAILED\020\270\020\022\027\n"
    "\022LOCALIZATION_ERROR\020\270\027\022\025\n\020PERCEPTION_ERR"
    "OR\020\240\037\022\030\n\023PERCEPTION_ERROR_TF\020\241\037\022\035\n\030PERCE"
    "PTION_ERROR_PROCESS\020\242\037\022\025\n\020PREDICTION_ERR"
    "OR\020\210\'", 525);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "error_code.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_error_5fcode_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_error_5fcode_2eproto_once_);
void protobuf_AddDesc_error_5fcode_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_error_5fcode_2eproto_once_,
                 &protobuf_AddDesc_error_5fcode_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_error_5fcode_2eproto {
  StaticDescriptorInitializer_error_5fcode_2eproto() {
    protobuf_AddDesc_error_5fcode_2eproto();
  }
} static_descriptor_initializer_error_5fcode_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 2000:
    case 2100:
    case 2101:
    case 2102:
    case 2103:
    case 2104:
    case 3000:
    case 4000:
    case 4001:
    case 4002:
    case 5000:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusPb::kErrorCodeFieldNumber;
const int StatusPb::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusPb::StatusPb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_error_5fcode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnss_driver.pb.StatusPb)
}

void StatusPb::InitAsDefaultInstance() {
}

StatusPb::StatusPb(const StatusPb& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gnss_driver.pb.StatusPb)
}

void StatusPb::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

StatusPb::~StatusPb() {
  // @@protoc_insertion_point(destructor:gnss_driver.pb.StatusPb)
  SharedDtor();
}

void StatusPb::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusPb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusPb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusPb_descriptor_;
}

const StatusPb& StatusPb::default_instance() {
  protobuf_InitDefaults_error_5fcode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StatusPb> StatusPb_default_instance_;

StatusPb* StatusPb::New(::google::protobuf::Arena* arena) const {
  StatusPb* n = new StatusPb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusPb::Clear() {
// @@protoc_insertion_point(message_clear_start:gnss_driver.pb.StatusPb)
  if (_has_bits_[0 / 32] & 3u) {
    error_code_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StatusPb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnss_driver.pb.StatusPb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gnss_driver.pb.ErrorCode error_code = 1 [default = OK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gnss_driver::pb::ErrorCode_IsValid(value)) {
            set_error_code(static_cast< ::gnss_driver::pb::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gnss_driver.pb.StatusPb.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnss_driver.pb.StatusPb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnss_driver.pb.StatusPb)
  return false;
#undef DO_
}

void StatusPb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnss_driver.pb.StatusPb)
  // optional .gnss_driver.pb.ErrorCode error_code = 1 [default = OK];
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gnss_driver.pb.StatusPb.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gnss_driver.pb.StatusPb)
}

::google::protobuf::uint8* StatusPb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnss_driver.pb.StatusPb)
  // optional .gnss_driver.pb.ErrorCode error_code = 1 [default = OK];
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gnss_driver.pb.StatusPb.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnss_driver.pb.StatusPb)
  return target;
}

size_t StatusPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnss_driver.pb.StatusPb)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .gnss_driver.pb.ErrorCode error_code = 1 [default = OK];
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }

    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusPb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnss_driver.pb.StatusPb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StatusPb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusPb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnss_driver.pb.StatusPb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnss_driver.pb.StatusPb)
    UnsafeMergeFrom(*source);
  }
}

void StatusPb::MergeFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnss_driver.pb.StatusPb)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StatusPb::UnsafeMergeFrom(const StatusPb& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StatusPb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnss_driver.pb.StatusPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusPb::CopyFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnss_driver.pb.StatusPb)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StatusPb::IsInitialized() const {

  return true;
}

void StatusPb::Swap(StatusPb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusPb::InternalSwap(StatusPb* other) {
  std::swap(error_code_, other->error_code_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusPb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StatusPb_descriptor_;
  metadata.reflection = StatusPb_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusPb

// optional .gnss_driver.pb.ErrorCode error_code = 1 [default = OK];
bool StatusPb::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StatusPb::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
void StatusPb::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void StatusPb::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
::gnss_driver::pb::ErrorCode StatusPb::error_code() const {
  // @@protoc_insertion_point(field_get:gnss_driver.pb.StatusPb.error_code)
  return static_cast< ::gnss_driver::pb::ErrorCode >(error_code_);
}
void StatusPb::set_error_code(::gnss_driver::pb::ErrorCode value) {
  assert(::gnss_driver::pb::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:gnss_driver.pb.StatusPb.error_code)
}

// optional string msg = 2;
bool StatusPb::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StatusPb::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void StatusPb::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void StatusPb::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& StatusPb::msg() const {
  // @@protoc_insertion_point(field_get:gnss_driver.pb.StatusPb.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StatusPb::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnss_driver.pb.StatusPb.msg)
}
void StatusPb::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnss_driver.pb.StatusPb.msg)
}
void StatusPb::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnss_driver.pb.StatusPb.msg)
}
::std::string* StatusPb::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:gnss_driver.pb.StatusPb.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StatusPb::release_msg() {
  // @@protoc_insertion_point(field_release:gnss_driver.pb.StatusPb.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StatusPb::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gnss_driver.pb.StatusPb.msg)
}

inline const StatusPb* StatusPb::internal_default_instance() {
  return &StatusPb_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace gnss_driver

// @@protoc_insertion_point(global_scope)
